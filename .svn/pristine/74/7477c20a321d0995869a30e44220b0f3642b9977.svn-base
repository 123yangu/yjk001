package com.yeehealth.yjk.activity.ui;

import java.io.File;

import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.yeehealth.yjk.R;
import com.yeehealth.yjk.activity.base.BaseActivity;
import com.yeehealth.yjk.json.bean.QQLoginReslutJsonBean;
import com.yeehealth.yjk.json.bean.QQUserBean;
import com.yeehealth.yjk.utils.IconUtil;
import com.yeehealth.yjk.utils.SPUtil;
import com.yeehealth.yjk.utils.StringUtils;
import com.yeehealth.yjk.widget.cache.volley.ImageCacheManager;
import com.yeehealth.yjk.widget.circleimg.CircleImageView;
import com.yeehealth.yjk.widget.dialog.ActionSheetDialog;
import com.yeehealth.yjk.widget.dialog.ActionSheetDialog.OnSheetItemClickListener;
import com.yeehealth.yjk.widget.dialog.ActionSheetDialog.SheetItemColor;

public class AccountLoginActivity extends BaseActivity implements OnClickListener {
	/** 返回按钮 */
	private ImageButton ib_back;
	/** 用户头像 */
	private CircleImageView account_image_header;
	/** 昵称 */
	private TextView tv_nickname;

	private Bitmap bitmap;
	/** 账户顶部个人信息 */
	private RelativeLayout rl_account_top;
	/** 修改密码 */
	private RelativeLayout rl_change_pwd;
	/** 用户名 */
	private RelativeLayout rl_change_username;
	/** 绑定邮箱 */
	private RelativeLayout rl_bind_email;
	/** 拍照保存的头像名称*/
	private static final String USER_ICON_NAME = "/usericon.png";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_login_succeed);
		findViewById();
		initView();
		initListener();
	}

	@Override
	protected void findViewById() {
		ib_back = (ImageButton) findViewById(R.id.ib_back);
		account_image_header = (CircleImageView) findViewById(R.id.account_image_header);
		tv_nickname = (TextView) findViewById(R.id.tv_nickname);
		rl_account_top = (RelativeLayout) findViewById(R.id.rl_account_top);
		rl_change_pwd = (RelativeLayout) findViewById(R.id.rl_change_pwd);
		rl_change_username = (RelativeLayout) findViewById(R.id.rl_change_username);
		rl_bind_email = (RelativeLayout) findViewById(R.id.rl_bind_email);
	}

	@Override
	protected void initView() {
		ib_back.setVisibility(View.GONE);
		QQLoginReslutJsonBean qqLoginReslutJsonBean = (QQLoginReslutJsonBean) getIntent().getSerializableExtra(
				"userBean");
		if(qqLoginReslutJsonBean != null){
			QQUserBean qqUserBean = (QQUserBean) SPUtil.readObjectExt(getApplicationContext(), "qqInfo");
			if(!StringUtils.isEmpty(qqUserBean.getFigureurl_qq_2())){
				account_image_header.setImageUrl(qqUserBean.getFigureurl_qq_2(),ImageCacheManager.getInstance().getImageLoader());
				account_image_header.setBorderColor(res.getColor(R.color.color_header_border));
				account_image_header.setBorderWidth(2);
			}
			tv_nickname.setText(qqLoginReslutJsonBean.getNickname());
		}
	}

	@Override
	protected void initListener() {
		account_image_header.setOnClickListener(this);
		rl_account_top.setOnClickListener(this);
		rl_change_pwd.setOnClickListener(this);
		rl_change_username.setOnClickListener(this);
		rl_bind_email.setOnClickListener(this);
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.rl_account_top:
			Intent setnicknameIntent=new Intent(this, SetNicknameActivity.class);
			startActivity(setnicknameIntent);
			break;
		case R.id.rl_change_pwd:
			Intent changepwdIntent=new Intent(this, ChangePasswordActivity.class);
			startActivity(changepwdIntent);
			break;
		case R.id.rl_change_username:
			Intent changeusernameIntent=new Intent(this, ChangeUserNameActivity.class);
			startActivity(changeusernameIntent);
			break;
		case R.id.account_image_header:
			new ActionSheetDialog(AccountLoginActivity.this)
			.builder()
			.setCancelable(false)
			.setCanceledOnTouchOutside(false)
			.addSheetItem("拍照", SheetItemColor.Blue,
					new OnSheetItemClickListener() {
						@Override
						public void onClick(int which) {
							try {
								openCamera();
							} catch (Exception e) {
								e.printStackTrace();
							}
						}
					})
			.addSheetItem("从相册选择", SheetItemColor.Blue,
					new OnSheetItemClickListener() {
						@Override
						public void onClick(int which) {
							openPhotos();
						}
					}).show();
			break;	
		case R.id.rl_bind_email:
			Intent bindemailIntent=new Intent(this, BindingEmailFirstAcitivity.class);
			startActivity(bindemailIntent);
			break;

		default:
			break;
		}
	}
	/**
	 * 打开照相机拍照
	 */
	protected void openCamera() {
		try {
			Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
			// 下面这句指定调用相机拍照后的照片存储的路径
			intent.putExtra(
					MediaStore.EXTRA_OUTPUT,
					Uri.fromFile(new File(IconUtil.getStoragePath(AccountLoginActivity.this), USER_ICON_NAME)));
			startActivityForResult(intent, 1);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**
	 * 打开相册选择照片
	 */
	protected void openPhotos() {
		try {
			Intent intent = new Intent(
					Intent.ACTION_PICK,
					android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
			startActivityForResult(intent, 2);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	/**
	 * @Title: deleteTempIconPath
	 * @Description: 删除头像临时文件
	 * @author lyl
	 * @date2015-3-19,上午9:27:20
	 * @Copyright: 2015 深圳市壹键康科技有限公司. All rights reserved.
	 * @return void    返回类型 
	 * @throws 
	 */
	private void deleteTempIconPath() {
		File userIconPathTemp = new File(IconUtil.getStoragePath(AccountLoginActivity.this)+ USER_ICON_NAME);
		if (userIconPathTemp != null && userIconPathTemp.exists()) {
			userIconPathTemp.delete();
			Log.d("userIconPathTemp===>","删除成功");
		} else {
			Log.d("userIconPathTemp===>","文件不存在");
		}
	}
	/**
	 * @Title: setImageView 
	 * @Description: 裁剪完成后对图片做处理后再设置图片到CircleImageView
	 * @author lyl
	 * @date2015-3-19,上午10:01:20
	 * @Copyright: 2015 深圳市壹键康科技有限公司. All rights reserved.
	 * @param @param bundle    设定文件 
	 * @return void    返回类型 
	 * @throws
	 */
	private void setImageView(Bundle bundle) {
		if (bundle != null) {
			bitmap = bundle.getParcelable("data");
			new Thread(new Runnable() {

				@Override
				public void run() {
					try {
						BitmapFactory.Options newOpts = new BitmapFactory.Options();
						newOpts.inJustDecodeBounds = true;// 只读边,不读内容
						newOpts.inJustDecodeBounds = false;
						float hh = 300f;//
						float ww = 150f;//
						int be = 1;
						if (((int) (newOpts.outWidth / ww)) > ((int) (newOpts.outHeight / hh))) {
							be = (int) (newOpts.outWidth / ww);
						} else {
							be = (int) (newOpts.outHeight / hh);
						}
						if (be <= 0)
							be = 1;
						newOpts.inSampleSize = be;// 设置采样率
						newOpts.inPreferredConfig = android.graphics.Bitmap.Config.ARGB_8888;// 该模式是默认的,可不设
						newOpts.inPurgeable = true;// 同时设置才会有效
						newOpts.inInputShareable = true;// 。当系统内存不够时候图片自动被回收
														// BitmapFactory.decodeStream(is,
														// null, newOpts);
						Message message = new Message();
						handler.sendMessage(message);
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
				Handler handler = new Handler() {
					@Override
					public void handleMessage(Message msg) {
						super.handleMessage(msg);
						if (bitmap != null) {
							account_image_header.setImageBitmap(bitmap);
						}
					}
				};
			}).start();
			deleteTempIconPath();
		}
	}
	/**
	 * @Title: startPhotoZoom
	 * @Description: 裁剪图片方法
	 * @author lyl
	 * @date2015-3-19,上午9:27:20
	 * @Copyright: 2015 深圳市壹键康科技有限公司. All rights reserved.
	 * @return void    返回类型 
	 * @throws 
	 */
	public void startPhotoZoom(Uri uri) {
		try {
			Intent intent = new Intent("com.android.camera.action.CROP");
			intent.setDataAndType(uri, "image/*");
			// 下面这个crop=true是设置在开启的Intent中设置显示的VIEW可裁剪
			intent.putExtra("crop", "true");
			// aspectX aspectY 是宽高的比例
			intent.putExtra("aspectX", 2);
			intent.putExtra("aspectY", 1);
			// outputX outputY 是裁剪图片宽高
			intent.putExtra("outputX", 300);
			intent.putExtra("outputY", 150);
			intent.putExtra("scale", true);
			intent.putExtra("noFaceDetection", false);
			intent.putExtra("return-data", true);
			startActivityForResult(intent, 3);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {

		switch (requestCode) {
		case 1:
			Log.d("onActivityResult===>","图片来自相机拍照");
			File temp = new File(IconUtil.getStoragePath(AccountLoginActivity.this)+ USER_ICON_NAME);
			startPhotoZoom(Uri.fromFile(temp));
			break;
		case 2:
			Log.d("onActivityResult===>"," 图片来自相册选择");
			startPhotoZoom(data.getData());
			break;
		case 3:
			Log.d("onActivityResult===>"," 取得裁剪后的图片");
			Bundle extras = data.getExtras();
			setImageView(extras);
			break;
		default:
			break;
		}
		super.onActivityResult(requestCode, resultCode, data);
	}
}
